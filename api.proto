syntax = "proto3";

package tanuki;


// GENERIC

message StatusResponse {
  bool success = 1;
  uint32 error_type = 2;
  string error_description = 3;
}


// ROUTER
// all router code needs redone...

service Router {
  rpc Receive(SubscriptionRequest) returns (stream Envelope) {}
  rpc Send(Envelope) returns (StatusResponse) {}
}

message SubscriptionRequest {
  string id = 1;
}

message Envelope {
  string recipient = 1;
  bytes pgp_message = 10;
}

message Message {
  string recipient = 1;
  string sender = 2;
  bytes message = 10;
  uint32 type = 11;
}


// MEDIATOR

service Mediator {
  rpc Handshake(MediatorHandshakeRequest) returns (MediatorHandshakeResponse) {}
}

message MediatorHandshakeRequest {
  string recipient = 1;
  bytes domain_ticket = 10;
  bytes sender_pubkey = 11;
  uint32 ttl = 20;
}

message MediatorHandshakeResponse {
  bytes encrypted_response = 1;
}

message MediatorHandshakeEncryptedResponse {
  bytes signature = 1;
  bytes key = 2;
  uint32 timestamp = 10;
  uint32 negotiated_ttl = 20;
}

message MediatorStoredRecord {
  bytes user_pubkey = 1;
}


// FORWARDER

service Forwarder {
  rpc Store(ForwarderStorageRequest) returns (StatusResponse) {}
  rpc Retrieve(ForwarderRetrievalRequest) returns (ForwarderRetrievalResponse) {}
}

message ForwarderStorageRequest {
  bytes encrypted_message = 1;
  string some_sort_of_recipient_identifier = 10;
  uint32 negotiated_ttl = 20;
}

message ForwarderRetrievalRequest {
  string some_sort_of_recipient_identifier = 10;
}

message ForwarderRetrievalResponse {
  bytes encrypted_message = 1;
}
